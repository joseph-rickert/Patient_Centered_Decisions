---
title: "Simple H&N Cancer Markov Model"
author: "Joseph Rickert"
date: 2025-04-18
description: ""
image: ""
image-alt: ""
categories: ""
code-fold: TRUE
code-summary: "Show the code"
editor: source
---

This document presents a very simple Markov model of a patients's progreassion through the states of head and neck cancer treatment. The model is based on a Markov chain with 5 states: Cancer (C), Treatment (T), Follow-up (F), Health (H) and Death (D). The transition probabilities are given in the transition matrix P. The time between transitions is one week.


```{r}
#| message: FALSE
#| warning: FALSE
#| echo: FALSE
#| code-fold: TRUE
#| code-summary: "Show the code"
library(Matrix)
library(tidyverse)
```


![](6state.png)

## Survival Data

The following tables come from the paper *Changes in Survival in Hean and Neck Cancers in the Late 20th and Earlt 21st Century: A Period Analysis by [Pulte & Brenner](2010)](https://pmc.ncbi.nlm.nih.gov/articles/PMC3228039/pdf/onc994.pdf)

The hazzard rate is the probability of dying in a given week. The  probability over all age groups of surviving for 5 years given by Pulte & Brenner is .659. Using this we calculate the hazzard rate and an exponential survival curve.

```{r}
P5Y <- .659
lambda <- -log(P5Y) / (5*52.14)
lambda
```

The mean survival time in weeks is given by:

```{r}
E_surv <- 1/lambda
E_surv
```

The exponential survival curve shown in the following figure may be used as a rough check on the reasonablness of the transitions probabilities that drive the Markov model below. **We need more than one data point to adequately model transition probabilities.**

```{r}
S <- function(t, lambda) {
  exp(-lambda * t)
}

t <- seq(0, 30*52.14, by = 1)

df <- data.frame(t , S = S(t, lambda))
ggplot(df, aes(x = t, y = S)) +
  geom_line() +
  labs(title = "Exponential Survival Curve", x = "Time (weeks)", y = "Survival Probability") 
  
```






## Transition Matrix
```{r}
#| message: false
#| warning: false
#| code-fold: TRUE
#| code-summary: "Show the code"
states <- c("C", "T", "F", "H", "NT", "D")

p12 = 0.9
p22 = 0.4
p23 = 1 - p22
p33 = 0.6
p36 = 0.001
p34 = 1 - (p33 + p36)
p46 = 0.0005
p44 = 1 - p46
p56 = 0.01
p55 = 1 - p56

P = matrix(c(
  0.0, p12, 0.0, 0.0, 1-p12, 0.0,
  0.0, p22, p23, 0.0, 0.0, 0.0,
  0.0, 0.0, p33, p34, 0.0, p36,
  0.0, 0.0, 0.0, p44, 0.0, p46,
  0.0, 0.0, 0.0, 0.0, p55, p56,
  0.0, 0.0, 0.0, 0.0, 0.0, 1.0
), nrow = length(states), byrow = TRUE)
colnames(P) <- states
rownames(P) <- states
rowSums(P)
P
```

## Markov Chain Characteristics

### Q matrix of Transient States

Q is the submatrix of P consisting of the transitive probabilities of transitive states.
```{r}
#| message: false
#| warning: false
#| code-fold: TRUE
#| code-summary: "Show the code"
states_Q <- c("C", "T", "F", "H", "NT")

P_v <- as.vector(t(P))
Q_v <- P_v[c(1:5, 7:11, 13:17, 19:23, 25:29)]
 
Q <- matrix(Q_v,nrow = length(states_Q), byrow = TRUE)

colnames(Q) <- states_Q
Q


```
### Fundamental Matrix, N

The entry $n_{ij}$ of N gives the expected number
of times that the process will visit the transient state $s_j$ if it is started in the transient state $s_i$. For a discrete time Markov chain where the basic time between transitions is one week, then $n_{ij}$ may also be interpreted as the expected number of days that the process will spend in state $s_j$ if it is started in state $s_i$.


```{r}
#| message: false
#| warning: false
#| code-fold: TRUE
#| code-summary: "Show the code"
I = diag(nrow(Q))
N = solve(I - Q)
N
```

### Time to Absorption

Let $t_i$ be the expected number of steps before the chain is absorbed, given that the chain starts in state $s_i$, and let c be acolumn vector whose entries are all 1. Then $t = N \cdot c$.

```{r}
#| message: false
#| warning: false
#| code-fold: TRUE
#| code-summary: "Show the code"
c <- rep(1,5)

t <- N %*% c
# rowSums(N) # alternate calculation
t
```

### Expected Time in Each State

This is the expected time in each state measured in weeks when the chain starts in state 1.

```{r}
#| message: false
#| warning: false
#| code-fold: TRUE
#| code-summary: "Show the code"
cat(" Weeks:", round(N[1,],2), "\n",
    "Years:", round(N[1,] / 52.14,2))
```


## Utility Calculations

## Adverse Events
The following are adverse effects of head and neck cancer treatment are based on [MacMillan Cancer Support](https://www.macmillan.org.uk/cancer-information-and-support/impacts-of-cancer/late-effects-of-head-and-neck-cancer-treatments):

1.  H - Hospitalization 
2.  PN - pain or numbness
3.  L - lymphoedema
4.  S - feeling sick
5.  T - tiredness
6.  DW - difficulty swallowing
7.  DS - difficulty speaking
8.  MT - missing teeth
9.  NS - neck shoulder stiffness
10. HL - hearing loss




```{r}
#| message: false
#| warning: false
#| code-fold: TRUE
#| code-summary: "Show the code"
Penalty<-matrix(c(5,9,0,0,1,
                  0,0,5,1,3,
                  0,7,5,1,2,
                  2,9,5,1,7,
                  4,8,1,1,7,
                  4,8,5,1,5,
                  4,8,5,1,4,
                  2,8,5,0,0,
                  0,8,5,1,1,
                  2,8,5,0,0
                  ), nrow = 10, byrow = TRUE)
rownames(Penalty) <- c("H", "PN", "L", "S", "T", "DW", "DS", "MT", "NS", "HL")
colnames(Penalty) <- states_Q
Penalty
```
### Normalized Penalty for States

```{r}
#| message: false
#| warning: false
#| code-fold: TRUE
#| code-summary: "Show the code"
cs <- colSums(Penalty)
cs_n <- cs/cs[1]
round(cs_n,2)
```


## Total Penalty

These are the penalties for each of the states except Death normalized to the penality of the initial Cancer state.

```{r}
#| message: false
#| warning: false
#| code-fold: TRUE
#| code-summary: "Show the code"
TP <- N[1,] * cs_n
round(TP,2)
```


#




